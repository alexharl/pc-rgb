[{"C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\index.tsx":"1","C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\app\\index.tsx":"2","C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\api\\index.ts":"3","C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\components\\control\\canvas-animate-button\\index.tsx":"4","C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\components\\control\\layer-visibility-bar\\index.tsx":"5","C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\components\\canvas\\index.tsx":"6","C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\helper\\map.ts":"7"},{"size":175,"mtime":1649800354521,"results":"8","hashOfConfig":"9"},{"size":3546,"mtime":1649801178254,"results":"10","hashOfConfig":"9"},{"size":1748,"mtime":1649801013836,"results":"11","hashOfConfig":"9"},{"size":471,"mtime":1649801178254,"results":"12","hashOfConfig":"9"},{"size":1543,"mtime":1649800795092,"results":"13","hashOfConfig":"9"},{"size":2963,"mtime":1649798650505,"results":"14","hashOfConfig":"9"},{"size":102,"mtime":1649676990229,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"9qp8rh",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\index.tsx",[],["32","33"],"C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\app\\index.tsx",["34","35"],"C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\api\\index.ts",[],"C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\components\\control\\canvas-animate-button\\index.tsx",["36"],"C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\components\\control\\layer-visibility-bar\\index.tsx",["37","38","39"],"C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\components\\canvas\\index.tsx",["40"],"import { Box, Paper } from '@material-ui/core';\r\nimport { FC, useEffect, useRef, useState } from 'react';\r\nimport { mapValueRange } from '../../helper/map';\r\nimport { IComponent } from '../../model/Model';\r\nimport { IPixel } from '../../model/Pixel';\r\n\r\nconst useCanvas = callback => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    callback([canvas, canvas && canvas.getContext('2d')]);\r\n  }, [callback]);\r\n\r\n  return canvasRef;\r\n};\r\n\r\nexport interface ICanvasProps {\r\n  pixelWidth?: number;\r\n  pixelHeight?: number;\r\n  pixels?: IPixel[];\r\n  components?: IComponent[];\r\n  onPixelSelected?: (pixel: IPixel) => void;\r\n}\r\n\r\nexport const Canvas: FC<ICanvasProps> = ({ pixelWidth, pixelHeight, pixels, components, onPixelSelected }) => {\r\n  const pixelSize = 20;\r\n\r\n  const width = (pixelWidth || 0) * pixelSize;\r\n  const height = (pixelHeight || 0) * pixelSize;\r\n  const [ctx, setCtx] = useState<CanvasRenderingContext2D>();\r\n\r\n  const canvasRef = useCanvas(([canvas, context]) => {\r\n    setCtx(context);\r\n  });\r\n\r\n  useEffect(() => {\r\n    var pixelRadius = 10;\r\n    var pixelOffset = pixelSize;\r\n    if (ctx && pixels) {\r\n      ctx.clearRect(0, 0, width, height);\r\n      for (let i = 0; i < pixels.length; i++) {\r\n        const pixel = pixels[i];\r\n\r\n        const hue = mapValueRange(pixel.color.hue, 0, 255, 360, 0) - 200;\r\n        const saturation = mapValueRange(pixel.color.saturation, 0, 255, 0, 100);\r\n        const brightness = 100 - mapValueRange(pixel.color.brightness, 0, 255, 0, 100);\r\n\r\n        const isComponentPixel =\r\n          components &&\r\n          components.find(c => {\r\n            return !!c.pixelPositions.find(p => {\r\n              return p.y === pixel.position.y && p.x === pixel.position.x;\r\n            });\r\n          });\r\n        let alpha = !!isComponentPixel ? 1 : 0.3;\r\n        const pixelPositionX = pixel.position.x * pixelOffset + pixelRadius + 1;\r\n        const pixelPositionY = pixel.position.y * pixelOffset + pixelRadius + 1;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(pixelPositionX, pixelPositionY, pixelRadius, 0, 2 * Math.PI);\r\n        ctx.fillStyle = `hsl(${hue},${saturation}%, ${brightness}%, ${alpha})`;\r\n        ctx.fill();\r\n      }\r\n    }\r\n  }, [pixels, ctx, components]);\r\n\r\n  const onCanvasClick = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\r\n    if (onPixelSelected) {\r\n      const x = Math.floor(e.clientX / pixelSize);\r\n      const y = Math.floor(e.clientY / pixelSize);\r\n      const foundPixel = pixels && pixels.find(p => p.position.x === x && p.position.y === y);\r\n      if (foundPixel) {\r\n        onPixelSelected(foundPixel);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n      <Box sx={{ padding: 15, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n        <canvas ref={canvasRef} width={width} height={height} onClick={onCanvasClick} />\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n","C:\\Users\\alexh\\Documents\\projects\\pc-rgb\\WebClient\\src\\helper\\map.ts",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":26,"nodeType":"47","messageId":"48","endLine":1,"endColumn":32},{"ruleId":"49","severity":1,"message":"50","line":48,"column":6,"nodeType":"51","endLine":48,"endColumn":8,"suggestions":"52"},{"ruleId":"45","severity":1,"message":"53","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"54","line":1,"column":15,"nodeType":"47","messageId":"48","endLine":1,"endColumn":21},{"ruleId":"45","severity":1,"message":"55","line":1,"column":63,"nodeType":"47","messageId":"48","endLine":1,"endColumn":67},{"ruleId":"45","severity":1,"message":"56","line":1,"column":84,"nodeType":"47","messageId":"48","endLine":1,"endColumn":94},{"ruleId":"49","severity":1,"message":"57","line":66,"column":6,"nodeType":"51","endLine":66,"endColumn":31,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'Drawer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'startup'. Either include it or remove the dependency array.","ArrayExpression",["61"],"'Box' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has missing dependencies: 'height' and 'width'. Either include them or remove the dependency array.",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [startup]",{"range":"67","text":"68"},"Update the dependencies array to be: [pixels, ctx, components, width, height]",{"range":"69","text":"70"},[1695,1697],"[startup]",[2268,2293],"[pixels, ctx, components, width, height]"]